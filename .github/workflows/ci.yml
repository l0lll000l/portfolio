# on:
#   pull_request:
#     branches:
#       - main
#       - master
#   push:
#     branches:
#       - main
#       - master
#       - develop
# name: "Build & Release"
# jobs:
#   build:
#     name: Build & Release
#     runs-on: windows-latest
#     steps:
#       - uses: actions/checkout@v3
#       # - uses: actions/setup-java@v3
#       #   with:
#       #     distribution: "zulu"

#       #     java-version: "12"
#       - uses: subosito/flutter-action@v2
#         with:
#           channel: "stable"
#           architecture: x64

#       #// apk
#       #  - run: flutter build apk --release --split-per-abi
#       # //web
#       - name: Build Flutter web
#         run: flutter build web --web-renderer html --release

#       #// ios
#       # - run: |
#       #     flutter build ios --no-codesign
#       #     cd build/ios/iphoneos
#       #     mkdir Payload
#       #     cd Payload
#       #     ln -s ../Runner.app
#       #     cd ..
#       #     zip -r app.ipa Payload
#       - name: Push to Releases
#         uses: ncipollo/release-action@v1
#         with:
#           # artifacts: "build/app/outputs/apk/release/*,build/ios/iphoneos/app.ipa"
#           artifacts: "build/web/**"
#           tag: v1.0.${{ github.run_number }}
#           token: ${{ secrets.TOKEN }}
name: Deploy to GitHub

# Trigger the workflow on push events to the main branch
on:
  push:
    branches: ["main"]

jobs:
  deploy:
    # Run the workflow on a Windows environment
    runs-on: windows-latest
    steps:
      # Checkout the code in the repository
      - uses: actions/checkout@v2
        # Comment: This step checks out the code in the repository, so that we can access the files

      # Set up Flutter
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.0.0"
          channel: "table"
          cache: true
        # Comment: This step sets up Flutter, so that we can use it to build the web app

      # Get dependencies
      - name: Get dependencies
        run: flutter pub get
        # Comment: This step gets the dependencies required by the Flutter project

      # Build the web app
      - name: Build web app
        run: flutter build web
        # Comment: This step builds the web app using Flutter

      # Upload the built web app as an artifact
      - name: Upload to GitHub
        uses: actions/upload-artifact@v2
        with:
          name: web-app
          path: build/web
        # Comment: This step uploads the built web app as an artifact, so that we can access it later

      # Create a new GitHub release
      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          RELEASE_NAME: "Web App Release"
          RELEASE_BODY: "Automated release from GitHub Actions"
        # Comment: This step creates a new GitHub release, where we can upload the files

      # Upload the files to the release
      - name: Upload files to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          UPLOAD_URL: ${{ steps.create-release.outputs.upload_url }}
          FILES: build/web/**
        # Comment: This step uploads the files from the build/web folder to the release
